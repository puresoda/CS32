  In this project, I demonstrated the use of object oriented programming, inheritence, recursion and polymorphism. As the name implies, the goal was to create a version of tetris that ran in the windows terminal (allbeit with 3 added pieces). Each piece type was created to be a derived class of a base classes titled "Piece". This was done such that functions that controlled movement, collisions, and rotations could be shared among the pieces. However, the 3 extra pieces required by the specifications had special functions. 
  One piece, called "Crazy Piece" moved contrary to the input (if the left arrow was pressed, the piece would move right). The "crazy piece" benefited from object oriented programming because it was able to borrow the base class's movement functions through the use of the "virtual" keyword. For example: " CrazyPiece::left() { Piece::right(); } "
  This project was hands down my favorite from the quarter. I often play Tetris in my free time so having a project tailored torwards my interests sparked my passion. The project can be seen as a culmination of everything I had learned about C++ at the point. Having to implement concepts from previous courses such as data structures, objects, recursion, and keyboard input made this project the one I enjoyed the most.
